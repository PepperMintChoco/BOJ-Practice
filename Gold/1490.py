'''
1490 - 자리수로 나누기
어떤 수 n이 주어졌을 때,
n으로 시작하면서, n의 0이 아닌 모든 자리수로 나누어떨어지는 수 중
가장 작은 수를 출력해야 하는 문제

n이 13일 때 n으로 시작하는 수는 130, 131, 1300, 13999 ... 등등이 있을 것이다.
이때 0이 아닌 모든 자리수로 나누어떨어지는 수를 찾으려고 한다면
n부터 시작해서 하나씩 확인해보는 방법이 있다(브루트 포스).
예를 들어 n = 69487이라고 하자.
먼저 694870 ~ 694879의 경우를 보자.
위 범위 내의 수 중에서 6, 9, 4, 8, 7로 나누어떨어지는 수는 없다.
그다음 6948700 ~ 6948799의 경우를 보자.
위 범위 내의 수 중에서도 조건을 만족하는 수는 없다.
69487000 ~ 의 경우를 보자.
조건을 만족하는 수 69487488을 발견했으므로 모든 반복문을 종료하고
위의 수를 출력한다.

문제를 잘못 이해해서 질문답변까지 올렸던 문제였다.
처음 주어진 수를 기준으로 나누어떨어지는가를 확인해야 하는데
계속해서 바뀌는 수(n3)를 기준으로 확인을 하고 있었던 것이었다.
6번의 WA 끝에 AC를 받았다.
'''

import sys

n = sys.stdin.readline().rstrip()
n2 = n
n3 = n

cnt = 1
while True:      
    for i in range(10**cnt):
        b = True
        lst = [*n]
        for j in lst:
            if j == '0' or j == '1':
                continue
            else:
                if int(n3) % int(j) != 0:
                    b = False            
        if b:
            break
        n3 = n2
        n3 += str(i).zfill(cnt)
    if b:
        break
    cnt += 1

print(n3)
